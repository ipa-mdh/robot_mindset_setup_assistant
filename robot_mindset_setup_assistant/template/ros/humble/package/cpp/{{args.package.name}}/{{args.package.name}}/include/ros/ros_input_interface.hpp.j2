#pragma once

#include <string>

{#- Initialize an empty list to collect unique message types #}
{%- set unique_msgs = [] %}
{%- set ns = namespace(add_actionlib=false,
                       add_parameterslib=false) -%}

{%- if args.ros is defined %}
{%- if args.ros.interfaces is defined %}
{%- for interface in args.ros.interfaces if interface.direction == "in" %}
{#- Check if the message type is already in the list #}
{%- if interface.msgs not in unique_msgs -%}
{#- If not, add it to the list #}
{%- set unique_msgs = unique_msgs.append(interface.msgs) -%}
{%- endif -%}

{#- Check if the interface is an action and set the flag #}
{%- if interface.type == "action" -%}
{%- set ns.add_actionlib = true -%}
{%- endif -%}
{#- Check if the interface is a parameter and set the flag #}
{%- if interface.type == "parameter" -%}
{%- set ns.add_parameterslib = true -%}
{%- endif -%}
{%- endfor %}
{%- endif %}
{%- endif %}

// Include message headers based on the Robot Mindset Setup Assistant configuration
{%- if ns.add_actionlib %}
#include <rclcpp_action/rclcpp_action.hpp>
{%- endif %}
{%- if ns.add_parameterslib %}
#include <rcl_interfaces/msg/set_parameters_result.hpp>
{%- endif %}

{%- for msgs in unique_msgs|sort %}
{%- if msgs in args.lookup.interfaces.msgs %}
{%- set lu = namespace(include=args.lookup.interfaces.msgs[msgs].include) %}
#include "{{ lu.include }}.hpp"
{%- else %}
// implementation is required for msgs: {{ msgs }}
{%- endif %}
{%- endfor %}

namespace {{ args.package.name |regex_replace('[^A-Za-z0-9]', '_')}} {

// Interface for the inbound direction (receiving messages)
class RosInputInterface {
public:
    virtual ~RosInputInterface() = default;

protected:
/****************** Callback Functions ******************/
{%- if args.ros is defined %}
{%- if args.ros.interfaces is defined %}
    // === Topic subscriber callbacks ===
{%- for interface in args.ros.interfaces if interface.type == "topic" and interface.direction == "in" %}
    {%- if args.lookup.interfaces.msgs[interface.msgs] is defined %}
    {%- set lu = namespace(ros_data_type = args.lookup.interfaces.msgs[interface.msgs].ros_data_type) %}
    virtual void callback_sub_{{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}_(const {{ lu.ros_data_type }} & msg) = 0;
    {%- else %}
    // {{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}: Unknown topic interface.msgs: {{ interface.msgs }}
    {%- endif %}
{% endfor %}

// === Service server callbacks ===
{%- for interface in args.ros.interfaces if interface.type == "service" and interface.direction == "out" %}
    {%- if args.lookup.interfaces.msgs[interface.msgs] is defined %}
    {%- set lu = namespace(ros_data_type = args.lookup.interfaces.msgs[interface.msgs].ros_data_type) %}
    virtual void callback_srv_{{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}_(const std::shared_ptr<{{ lu.ros_data_type }}::Request> req, std::shared_ptr<{{ lu.ros_data_type }}::Response> res) = 0;
    {%- else %}
    // {{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}: Unknown service interface.msgs: {{ interface.msgs }}
{%- endif %}
{% endfor %}

// === Action server callbacks ===
{%- for interface in args.ros.interfaces if interface.type == "action" and interface.direction == "out" %}
    {%- if args.lookup.interfaces.msgs[interface.msgs] is defined %}
    {%- set lu = namespace(ros_data_type = args.lookup.interfaces.msgs[interface.msgs].ros_data_type) %}
    // Action server callbacks for {{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}
    virtual rclcpp_action::GoalResponse handle_goal_{{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}_(
        const rclcpp_action::GoalUUID & uuid,
        std::shared_ptr<const {{ lu.ros_data_type }}::Goal> goal) = 0;
    
    virtual rclcpp_action::CancelResponse handle_cancel_{{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}_(
        const std::shared_ptr<rclcpp_action::ServerGoalHandle<{{ lu.ros_data_type }}>> goal_handle) = 0;
    
    virtual void handle_accepted_{{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}_(
        const std::shared_ptr<rclcpp_action::ServerGoalHandle<{{ lu.ros_data_type }}>> goal_handle) = 0;
    
    virtual void execute_{{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}_(
        const std::shared_ptr<rclcpp_action::ServerGoalHandle<{{ lu.ros_data_type }}>> goal_handle) = 0;
    {%- else %}
    // {{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}: Unknown action interface.msgs: {{ interface.msgs }}
    {%- endif %}
{% endfor %}
{%- endif %}
{%- endif %}
};

} // namespace {{ args.package.name |regex_replace('[^A-Za-z0-9]', '_')}}