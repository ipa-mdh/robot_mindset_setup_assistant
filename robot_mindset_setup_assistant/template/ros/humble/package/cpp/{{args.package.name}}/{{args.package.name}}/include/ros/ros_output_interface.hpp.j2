#pragma once

#include <string>

namespace {{ args.package.name |regex_replace('[^A-Za-z0-9]', '_')}} {

// Interface for the outbound direction (sending messages)
class RosOutputInterface {
public:
    virtual ~RosOutputInterface() = default;

protected:
    /****************** Interface Functions ******************/
    // === Topic publisher ===
{%- if args.ros is defined %}
{%- if args.ros.interfaces is defined %}
{%- for interface in args.ros.interfaces if interface.type == "topic" and interface.direction == "out" %}
    {%- if args.lookup.interfaces.msgs[interface.msgs] is defined %}
    {%- set lu = namespace(ros_data_type = args.lookup.interfaces.msgs[interface.msgs].ros_data_type,
                           cpp_data_type = args.lookup.interfaces.msgs[interface.msgs].cpp_data_type) %}
    // {{ interface.description }}
    virtual void interface_pub_{{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}_(
    {%- for field in lu.cpp_data_type %}
        const {{ field.type }} &msg_{{ field.name }}{% if not loop.last %}, {% endif %}
    {%- endfor %}) = 0;
    {%- else %}
    // Implementation is required: virtual void interface_pub_{{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}_(const {{ interface.msgs }} &msg) = 0;
    {%- endif %}
{%- endfor %}
{%- endif %}
{%- endif %}

    // === Service call ===
{%- if args.ros is defined %}
{%- if args.ros.interfaces is defined %}
{%- for interface in args.ros.interfaces if interface.type == "service" and interface.direction == "in" %}
    {%- if args.lookup.interfaces.msgs[interface.msgs] is defined %}
    {%- set lu = namespace(ros_data_type = args.lookup.interfaces.msgs[interface.msgs].ros_data_type,
                           cpp_data_type = args.lookup.interfaces.msgs[interface.msgs].cpp_data_type) %}
    // {{ interface.description }}
    virtual bool interface_srv_{{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}_(
    {%- for req in lu.cpp_data_type.req %}
        {{ req.type }} req_{{ req.name }}{% if not loop.last %}, {% endif %}
    {%- endfor %}
    {%- if lu.cpp_data_type.req|length > 0 and lu.cpp_data_type.res|length > 0 %},{% endif -%}
    {%- for res in lu.cpp_data_type.res %}
        {{ res.type }} & res_{{ res.name }}{% if not loop.last %}, {% endif %}
    {%- endfor -%}
    ) = 0;
    {%- else %}
    // {{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}: Unknown service interface.msgs: {{ interface.msgs }}
    {%- endif %}
{% endfor %}
{%- endif %}
{%- endif %}

    // === Action client interface ===
{%- if args.ros is defined %}
{%- if args.ros.interfaces is defined %}
{%- for interface in args.ros.interfaces if interface.type == "action" and interface.direction == "in" %}
    {%- if args.lookup.interfaces.msgs[interface.msgs] is defined %}
    {%- set lu = namespace(ros_data_type = args.lookup.interfaces.msgs[interface.msgs].ros_data_type,
                           cpp_data_type = args.lookup.interfaces.msgs[interface.msgs].cpp_data_type) %}
    // {{ interface.description }}
    virtual bool interface_act_{{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}_(
    {%- if lu.cpp_data_type.goal is defined %}
    {%- for field in lu.cpp_data_type.goal %}
        const {{ field.type }} &goal_{{ field.name }}{% if not loop.last %}, {% endif %}
    {%- endfor %}
    {%- else %}
        const {{ lu.ros_data_type }}::Goal &goal
    {%- endif %}) = 0;
    {%- else %}
    // {{ interface.name|regex_replace('[^A-Za-z0-9]', '_') }}: Unknown action interface.msgs: {{ interface.msgs }}
    {%- endif %}
{%- endfor %}
{%- endif %}
{%- endif %}
};

} // namespace {{ args.package.name |regex_replace('[^A-Za-z0-9]', '_')}}