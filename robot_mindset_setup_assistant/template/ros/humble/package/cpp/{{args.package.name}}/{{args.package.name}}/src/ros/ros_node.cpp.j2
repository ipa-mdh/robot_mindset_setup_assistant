#include <chrono>
#include <functional>
#include <memory>
#include <thread>
#include "ros/ros_node.hpp"

namespace {{ args.package.name|regex_replace('[^A-Za-z0-9]', '_') }}
{

/****************** Constructor & Destructor ******************/
ROSNode::ROSNode() : Node("{{ args.package.name |regex_replace('[^A-Za-z0-9]', '_')}}")
{
    // Initialize handler composition
    topic_handler_ = std::make_unique<RosTopicHandler>(this);
    service_handler_ = std::make_unique<RosServiceHandler>(this);
    action_handler_ = std::make_unique<RosActionHandler>(this);
    parameter_handler_ = std::make_unique<RosParameterHandler>(this);

    // Initialize handlers
    topic_handler_->initialize();
    service_handler_->initialize();
    action_handler_->initialize();
    parameter_handler_->initialize();

    // Delegate logic module setup if needed
    init_logic_module();
}

ROSNode::~ROSNode()
{

}

/****************** Initialization Functions ******************/
void ROSNode::init_parameters()
{
    // Delegate parameter initialization to handler
    if (parameter_handler_) {
        parameter_handler_->initialize();
    }
}

void ROSNode::init_ros_interface_subscribers()
{
    // Delegate subscriber initialization to topic handler
    if (topic_handler_) {
        topic_handler_->initialize();
    }
}
void ROSNode::init_ros_interface_publishers()
{
    // Delegate publisher initialization to topic handler
    if (topic_handler_) {
        topic_handler_->initialize();
    }
}
void ROSNode::init_ros_interface_services()
{
    // Delegate service server initialization to service handler
    if (service_handler_) {
        service_handler_->initialize();
    }
}
void ROSNode::init_ros_interface_clients()
{
    // Delegate service client initialization to service handler
    if (service_handler_) {
        service_handler_->initialize();
    }
}
void ROSNode::init_ros_interface_action_services()
{
        // Delegate action server initialization to action handler
        if (action_handler_) {
                action_handler_->initialize();
        }
}
void ROSNode::init_ros_interface_action_clients()
{
        // Delegate action client initialization to action handler
        if (action_handler_) {
                action_handler_->initialize();
        }
}
void ROSNode::init_logic_module()
{
    
}

} // namespace {{ args.package.name|regex_replace('[^A-Za-z0-9]', '_') }}
