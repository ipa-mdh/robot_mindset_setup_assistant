<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="robot_fanuc_ros2_control" 
  params="name 
          simulation_controllers:='controllers.yaml'
          prefix:='robot_fanuc'
          robot_ip:=10.11.31.111 
          use_mock_hardware:=false
          read_only:=false
          use_rmi:=false
          use_hspo:=false
          sim_gazebo_classic:=false
          sim_gazebo:=false">
  <!-- Read only parameter should allow to move the robot via manual guidance, jog, etc throu the TP, and makes available the /joint_states topic -->

    <ros2_control name="${prefix}_${name}" type="system">

      <hardware>
        <xacro:if value="${use_mock_hardware}">
          <plugin>mock_components/GenericSystem</plugin>
          <param name="mock_sensor_commands">${mock_sensor_commands}</param>
        </xacro:if>
        <xacro:if value="${sim_gazebo_classic}">
          <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </xacro:if>
        <xacro:if value="${sim_gazebo}">
          <plugin>gz_ros2_control/GazeboSimSystem</plugin>
        </xacro:if>
        <xacro:unless value="${use_mock_hardware or sim_gazebo_classic or sim_gazebo}">
          <plugin>fanuc/FanucHw</plugin>
          <param name="robot_ip">${robot_ip}</param>
          <param name="read_only">${read_only}</param>
          <param name="use_rmi">${use_rmi}</param>
          <param name="use_hspo">${use_hspo}</param>
        </xacro:unless>
      </hardware>

      <joint name="${prefix}_J1">
        <command_interface name="position">
          <param name="min">{-2*pi}</param>
          <param name="max">{2*pi}</param>
        </command_interface>
        <!-- <command_interface name="velocity">
          <param name="min">-3.15</param>
          <param name="max">3.15</param>
        </command_interface> -->
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <joint name="${prefix}_J2">
        <command_interface name="position">
          <param name="min">{-2*pi}</param>
          <param name="max">{2*pi}</param>
        </command_interface>
        <!-- <command_interface name="velocity">
          <param name="min">-3.15</param>
          <param name="max">3.15</param>
        </command_interface> -->
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <joint name="${prefix}_J3">
        <command_interface name="position">
          <param name="min">{-pi}</param>
          <param name="max">{pi}</param>
        </command_interface>
        <!-- <command_interface name="velocity">
          <param name="min">-3.15</param>
          <param name="max">3.15</param>
        </command_interface> -->
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <joint name="${prefix}_J4">
        <command_interface name="position">
          <param name="min">{-2*pi}</param>
          <param name="max">{2*pi}</param>
        </command_interface>
        <!-- <command_interface name="velocity">
          <param name="min">-3.2</param>
          <param name="max">3.2</param>
        </command_interface> -->
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <joint name="${prefix}_J5">
        <command_interface name="position">
          <param name="min">{-2*pi}</param>
          <param name="max">{2*pi}</param>
        </command_interface>
        <!-- <command_interface name="velocity">
          <param name="min">-3.2</param>
          <param name="max">3.2</param>
        </command_interface> -->
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <joint name="${prefix}_J6">
        <command_interface name="position">
          <param name="min">{-2*pi}</param>
          <param name="max">{2*pi}</param>
        </command_interface>
        <!-- <command_interface name="velocity">
          <param name="min">-3.2</param>
          <param name="max">3.2</param>
        </command_interface> -->
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <xacro:if value="${sim_gazebo_classic}">
      <!-- Gazebo plugins -->
      <gazebo reference="world">
      </gazebo>
      <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
          <parameters>${simulation_controllers}</parameters>
        </plugin>
      </gazebo>
    </xacro:if>

    <xacro:if value="${sim_gazebo}">
      <!-- Gazebo plugins -->
      <gazebo reference="world">
      </gazebo>
      <gazebo>
        <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
          <parameters>${simulation_controllers}</parameters>
          <controller_manager_node_name>${prefix}_controller_manager</controller_manager_node_name>
        </plugin>
      </gazebo>
    </xacro:if>

    </ros2_control>

  </xacro:macro>

</robot>
