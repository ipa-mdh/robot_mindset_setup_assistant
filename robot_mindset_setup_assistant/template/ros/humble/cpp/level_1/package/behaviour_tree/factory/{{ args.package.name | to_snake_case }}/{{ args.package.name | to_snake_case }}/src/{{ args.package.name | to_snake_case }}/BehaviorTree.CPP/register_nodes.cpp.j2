#include "{{ args.package.name }}/BehaviorTree.CPP/register_nodes.hpp"

{% set node_cfg = node | default(feature.node, true) %}{% if node_cfg and node_cfg.type | default('action') == 'action' %}{% set identifier = node_cfg.name | default(node_cfg.id | default('ActionNode', true), true) %}{% set class_name = node_cfg.class_name | default(identifier | to_pascal_case) %}{% set file_stem = identifier | to_snake_case %}
#include "{{ args.package.name }}/BehaviorTree.CPP/actions/{{ file_stem }}.hpp"
{% endif %}
namespace {{ args.package.name | to_snake_case }}::bt {

void register_behavior_tree_nodes(BT::BehaviorTreeFactory &factory)
{
{% if node_cfg and node_cfg.type | default('action') == 'action' %}{% set identifier = node_cfg.name | default(node_cfg.id | default('ActionNode', true), true) %}{% set class_name = node_cfg.class_name | default(identifier | to_pascal_case) %}{% set registration_id = node_cfg.registration_id | default(node_cfg.id or node_cfg.name or class_name, true) %}  factory.registerNodeType<actions::{{ class_name }}>("{{ registration_id }}");
{% else %}  (void)factory;
{% endif %}}

}  // namespace {{ args.package.name | to_snake_case }}::bt
