#include "{{ args.package.name }}/BehaviorTree.CPP/register_nodes.hpp"

{% set action_nodes = feature.action_nodes | default([], true) %}
{%- for action in action_nodes %}
{% set identifier = action.name | default('ActionNode', true) %}
{% set class_name = action.class_name | default(identifier | to_pascal_case) %}
{% set file_stem = identifier | to_snake_case %}
#include "{{ args.package.name }}/BehaviorTree.CPP/actions/{{ file_stem }}.hpp"
{%- endfor %}

namespace {{ args.package.name | to_snake_case }}::bt {

void register_behavior_tree_nodes(BT::BehaviorTreeFactory &factory)
{
{%- if action_nodes %}
{%- for action in action_nodes %}
{% set identifier = action.name | default('ActionNode', true) %}
{% set class_name = action.class_name | default(identifier | to_pascal_case) %}
{% set registration_id = action.registration_id | default(action.id or action.name or class_name, true) %}
  factory.registerNodeType<actions::{{ class_name }}>("{{ registration_id }}");
{%- endfor %}
{%- else %}
  (void)factory;
{%- endif %}
}

}  // namespace {{ args.package.name | to_snake_case }}::bt

