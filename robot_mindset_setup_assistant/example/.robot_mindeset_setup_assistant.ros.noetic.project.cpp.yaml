# === Robot Mindset Setup Assistant === 
# This file is used to configure the setup assistant for the robot_ur package.
# It contains information about the package, capabilities, and launch configurations.

# This YAML file acts as both the template and the data source for generating a final
# configuration. It uses Jinja2 syntax (e.g., {{ args.package.name }}) to allow referencing
# values defined earlier in the file.
# The file is first loaded as a dictionary using yaml.safe_load(), then passed to a
# Jinja2 template created from the same file. The template is rendered with this dictionary
# as context, and the result is parsed again into the final YAML structure.

project:
  name: sim2real_gap
  description: A package to examine the sim2real gap."
  version: "0.0.1"
  maintainer: Robot Mindset
  maintainer_email: robot.mindset@robot-mindset.com
  license:
    value: MIT
    options: [BSD, MIT, Boost Software License, GPLv2, GPLv3, LGPLv2.1, LGPLv3]
  language: cpp # python, cpp
  environment: ros.noetic # ros.noetic, ros.humble, (debian)
  # dependencies:
  #   apt:
  #     - python3-catkin-tools
  #     - libspdlog-dev
  #   pip: []
  #   ros:
  #     - std_msgs
  #     - roscpp
  #   git: []
  #     # - name: sim2real_gap
  #     #   url: https://gitlab.cc-asp.fraunhofer.de/multirobot/strategy/sim2real_gap.git
  #     #   version: main
  #   packages: # CMakeLists.txt modifications
  #     - name: spdlog # https://github.com/gabime/spdlog
  #       target_link: spdlog::spdlog


link_serve:
  - name: joint_state_publisher
    arguments:
      - name: "joint_state_publisher_source_list"
        description: "Joint state publisher."
        value: [table_jigless_cell/joint_states, robot_ur_1/joint_states, robot_ur_2/joint_states, robot_ur_3/joint_states, linear_axis_1/joint_states, tool_vacuum_gripper_2/joint_states, tool_vacuum_gripper_3/joint_states, station_2/joint_states, station_1/joint_states, ]

single_serve:
  - name: robot_state_publisher
  - name: mtc_generator
  - name: moveit_task_constructor

multi_serve:
  - name: sim2real_gap
    arguments:
      - name: "instance_config_folder"
        description: "Location of the instance config folder."
        default: "$(find {{ args.project.name }})/instance_config"

single_serve:
  # Todo: eher Beschreibung für ein Projekt / diese Beschreibung sollte gleich sein für Packagete und Projekte / oder diese Beschreibung braucht man nicht, da alle multi_serve Packete auch als single_serve laufen können
  # name: robot_state_publisher
  #
  # mtc_generator: true
  # moveit: true
  # robot_state_publisher: true

multi_serve:
  # launch:
  #   arguements:
  #     - name: "instance_config_folder"
  #       description: "Location of the instance config folder."
  #       default: "$(find {{ args.package.name }})/example/instance_config"

    